.TH "src/preproc/rotate/rotate.h" 3 "Sun Oct 30 2022" "OCR-Lezcollitade" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/preproc/rotate/rotate.h
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "SDL_Surface * \fBrotate_surface\fP (SDL_Surface *surface, double deg)"
.br
.ti -1c
.RI "void \fBrotate_image\fP (const char *file, double deg)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void rotate_image (const char * file, double deg)"

.PP
Definition at line \fB52\fP of file \fBrotate\&.c\fP\&.
.PP
.nf
53 {
54     if (SDL_Init(SDL_INIT_VIDEO) != 0)
55         errx(EXIT_FAILURE, "%s", SDL_GetError());
56 
57     SDL_Surface *surface = load_image(file);
58 
59     SDL_Surface *new_surface = rotate_surface(surface, deg);
60 
61     if (IMG_SavePNG(new_surface, "rotated\&.png") != 0)
62         errx(EXIT_FAILURE, "%s", SDL_GetError());
63 
64     SDL_FreeSurface(new_surface);
65     SDL_FreeSurface(surface);
66     SDL_Quit();
67 }
.fi
.SS "SDL_Surface * rotate_surface (SDL_Surface * surface, double deg)"

.PP
Definition at line \fB9\fP of file \fBrotate\&.c\fP\&.
.PP
.nf
10 {
11     Uint32 *pixels = surface->pixels;
12 
13     int width = surface->w;
14     int height = surface->h;
15 
16     int len = width * height;
17 
18     deg = deg * M_PI / 180;
19 
20     int midx = width / 2;
21     int midy = height / 2;
22 
23     SDL_Surface *new_surface
24         = SDL_CreateRGBSurface(0, width, height, 32, 0, 0, 0, 0);
25 
26     Uint32 *new_pixels = new_surface->pixels;
27 
28     for (int i = 0; i < len; i++)
29     {
30         int destx = i % width;
31         int desty = i / width;
32 
33         int sourcex
34             = floor(cos(-deg) * (destx - midx) - sin(-deg) * (desty - midy))
35               + midx;
36 
37         int sourcey
38             = floor(sin(-deg) * (destx - midx) + cos(-deg) * (desty - midy))
39               + midy;
40 
41         int sourcei = sourcey * width + sourcex;
42 
43         if (sourcei >= 0 && sourcei < len)
44             new_pixels[i] = pixels[sourcei];
45         else
46             new_pixels[i] = SDL_MapRGB(surface->format, 255, 255, 255);
47     }
48 
49     return new_surface;
50 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for OCR-Lezcollitade from the source code\&.
