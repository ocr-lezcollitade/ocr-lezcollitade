.TH "src/preproc/sudoku_detection/sudoku_split.c" 3 "Sat Oct 29 2022" "OCR-Lezcollitade" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/preproc/sudoku_detection/sudoku_split.c
.SH SYNOPSIS
.br
.PP
\fC#include <SDL2/SDL\&.h>\fP
.br
\fC#include <SDL2/SDL_image\&.h>\fP
.br
\fC#include <err\&.h>\fP
.br
\fC#include <math\&.h>\fP
.br
\fC#include 'sudoku_split\&.h'\fP
.br
\fC#include '\&.\&./\&.\&./utils/matrices/matrix\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBUNUSED\fP(x)   (void)(x)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "SDL_Surface * \fBscale_down\fP (SDL_Surface *surface, size_t w, size_t h, size_t new_w, size_t new_h)"
.br
.RI "scales down a surface
.PP
want to scale down "
.ti -1c
.RI "void \fBsudoku_split\fP (char *black_white, char *grayscale)"
.br
.RI "splits the sudoku grid into 81 squares "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBthres\fP = 600"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define UNUSED(x)   (void)(x)"

.PP
Definition at line \fB7\fP of file \fBsudoku_split\&.c\fP\&.
.SH "Function Documentation"
.PP 
.SS "SDL_Surface * scale_down (SDL_Surface * surface, size_t w, size_t h, size_t new_w, size_t new_h)"

.PP
scales down a surface
.PP
want to scale down 
.PP
\fBParameters\fP
.RS 4
\fIw,h\fP the width and height of the original surface
.br
\fInew_w,new_h\fP the width and height of the surface we want 
.RE
.PP

.PP
Definition at line \fB189\fP of file \fBsudoku_split\&.c\fP\&.
.PP
.nf
191 {
192     SDL_Surface *output
193         = SDL_CreateRGBSurface(0, (int)new_w, (int)new_h, 32, 0, 0, 0, 0);
194 
195     SDL_PixelFormat *format = surface->format;
196     SDL_PixelFormat *format_output = output->format;
197 
198     Uint32 *pixels = surface->pixels;
199     Uint32 *pixels_output = output->pixels;
200 
201     double ratio_h = ((double)h / new_h);
202     double ratio_w = ((double)w / new_w);
203 
204     for (size_t j = 0; j < new_h; j++)
205         for (size_t i = 0; i < new_w; i++)
206         {
207             int r, g, b;
208             average(i, j, ratio_h, ratio_w, w, format, pixels, &r, &g, &b);
209             pixels_output[j * new_w + i] = SDL_MapRGB(format_output, r, g, b);
210         }
211 
212     return output;
213 }
.fi
.SS "void sudoku_split (char * black_white, char * grayscale)"

.PP
splits the sudoku grid into 81 squares 
.PP
\fBParameters\fP
.RS 4
\fIblack_white\fP the path to the black & white picture of the sudoku 
.br
\fIgrayscale\fP the path to the grayscaled picture of the sudoku 
.RE
.PP

.PP
Definition at line \fB494\fP of file \fBsudoku_split\&.c\fP\&.
.PP
.nf
495 {
496     // Initializes the SDL\&.
497     if (SDL_Init(SDL_INIT_VIDEO) != 0)
498         errx(EXIT_FAILURE, "%s", SDL_GetError());
499 
500     SDL_Surface *surface = load_image(black_white);
501     SDL_Surface *sudoku = load_image(grayscale);
502 
503     line_detection(surface, sudoku);
504 
505     SDL_FreeSurface(surface);
506     SDL_FreeSurface(sudoku);
507 
508     SDL_Quit();
509 }
.fi
.SH "Variable Documentation"
.PP 
.SS "int thres = 600"

.PP
Definition at line \fB9\fP of file \fBsudoku_split\&.c\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for OCR-Lezcollitade from the source code\&.
