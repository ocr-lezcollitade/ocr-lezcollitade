.TH "src/preproc/sudoku_detection/sudoku_split.c" 3 "Sat Oct 29 2022" "OCR-Lezcollitade" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/preproc/sudoku_detection/sudoku_split.c
.SH SYNOPSIS
.br
.PP
\fC#include <SDL2/SDL\&.h>\fP
.br
\fC#include <SDL2/SDL_image\&.h>\fP
.br
\fC#include <err\&.h>\fP
.br
\fC#include <math\&.h>\fP
.br
\fC#include 'sudoku_split\&.h'\fP
.br
\fC#include '\&.\&./\&.\&./utils/matrices/matrix\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBUNUSED\fP(x)   (void)(x)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "SDL_Surface * \fBscale_down\fP (SDL_Surface *surface, size_t w, size_t h, size_t new_w, size_t new_h, int b_w)"
.br
.RI "scales down a surface "
.ti -1c
.RI "void \fBsudoku_split\fP (char *black_white, char *grayscale, char *path)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBthres\fP = 600"
.br
.ti -1c
.RI "char \fBsave_path\fP [30]"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define UNUSED(x)   (void)(x)"

.PP
Definition at line 7 of file sudoku_split\&.c\&.
.SH "Function Documentation"
.PP 
.SS "SDL_Surface * scale_down (SDL_Surface * surface, size_t w, size_t h, size_t new_w, size_t new_h, int b_w)"

.PP
scales down a surface 
.PP
\fBParameters\fP
.RS 4
\fIsurface\fP the surface we want to scale down 
.br
\fIw,h\fP the width and height of the original surface 
.br
\fInew_w,new_h\fP the width and height of the surface we want 
.br
\fIb_w\fP boolean indicating if we want a black and white output 
.RE
.PP

.PP
Definition at line 190 of file sudoku_split\&.c\&.
.PP
.nf
192 {
193     SDL_Surface *output
194         = SDL_CreateRGBSurface(0, (int)new_w, (int)new_h, 32, 0, 0, 0, 0);
195 
196     SDL_PixelFormat *format = surface->format;
197     SDL_PixelFormat *format_output = output->format;
198 
199     Uint32 *pixels = surface->pixels;
200     Uint32 *pixels_output = output->pixels;
201 
202     double ratio_h = ((double)h / new_h);
203     double ratio_w = ((double)w / new_w);
204 
205     for (size_t j = 0; j < new_h; j++)
206         for (size_t i = 0; i < new_w; i++)
207         {
208             int r, g, b;
209             average(i, j, ratio_h, ratio_w, w, format, pixels, &r, &g, &b);
210             if (b_w)
211             {
212                 int value = (r + g + b < 382 ? 0 : 765);
213                 pixels_output[j * new_w + i]
214                     = SDL_MapRGB(format_output, value, value, value);
215             }
216             else
217                 pixels_output[j * new_w + i]
218                     = SDL_MapRGB(format_output, r, g, b);
219         }
220 
221     return output;
222 }
.fi
.SS "void sudoku_split (char * black_white, char * grayscale, char * path)"

.PP
Definition at line 537 of file sudoku_split\&.c\&.
.PP
.nf
538 {
539     // Initializes the SDL\&.
540     if (SDL_Init(SDL_INIT_VIDEO) != 0)
541         errx(EXIT_FAILURE, "%s", SDL_GetError());
542 
543     SDL_Surface *b_w = load_image(black_white);
544     SDL_Surface *gray = load_image(grayscale);
545 
546     strcpy(save_path, path);
547 
548     line_detection(b_w, gray);
549 
550     SDL_FreeSurface(b_w);
551     SDL_FreeSurface(gray);
552 
553     SDL_Quit();
554 }
.fi
.SH "Variable Documentation"
.PP 
.SS "char save_path[30]"

.PP
Definition at line 10 of file sudoku_split\&.c\&.
.SS "int thres = 600"

.PP
Definition at line 9 of file sudoku_split\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for OCR-Lezcollitade from the source code\&.
